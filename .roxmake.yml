default:
  include:
    - build
    - build-image
    - push-image

local:
  include:
    - build-local
    - build-image
    - push-image

build:
  steps:
    - name: Build in docker
      image: "messense/rust-musl-cross:x86_64-musl"
      run: git config --global --add safe.directory /work; cargo build --release --locked --target x86_64-unknown-linux-musl

build-local:
  steps:
    - name: Install musl for archlinux
      os: "linux"
      condition:
        - command: "musl-gcc"
          exists: false
        - file: "/etc/arch-release"
          exists: true
      run: sudo pacman -S musl

    - name: Install target
      run: rustup target add x86_64-unknown-linux-musl

    - name: Build local
      run: cargo build --release --locked --target x86_64-unknown-linux-musl

get-image-name:
  env:
    - name: IMAGE_DOMAIN
      value: "fioncat"
  steps:
    - name: Get tag
      run: git describe --tags --abbrev=0
      allow_failure: true
      capture_output: IMAGE_TAG

    - name: Get SHA
      condition:
        - env: "IMAGE_TAG"
          exists: false
      run: echo dev-$(git rev-parse --short HEAD)
      capture_output: IMAGE_TAG

    - name: Set image name
      set_env:
        name: IMAGE_NAME
        value: "${IMAGE_DOMAIN:?}/roxide:${IMAGE_TAG:?}"

build-image:
  include: ["get-image-name"]
  steps:
    - name: Build docker image
      docker_build:
        image: "${IMAGE_NAME:?}"
        file: "Dockerfile"

push-image:
  include: ["get-image-name"]
  steps:
    - name: Push docker image
      docker_push: "${IMAGE_NAME:?}"

clean:
  steps:
    - name: Remove old build
      run: rm -rf ./target
