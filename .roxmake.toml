[default]
include = ["build"]

[install]
include = ["build"]

[[install.steps]]
name = "Install for linux"
os = "linux"
run = "cp -f ./target/x86_64-unknown-linux-gnu/release/roxide ~/.cargo/bin"

[[install.steps]]
name = "Install for mac"
os = "macos"
run = "cp -f ./target/release/roxide ~/.cargo/bin"

[build]

[[build.steps]]
name = "Build for linux"
os = "linux"
run = "cargo build --release --locked --target x86_64-unknown-linux-gnu"

[[build.steps]]
name = "Build for mac"
os = "macos"
run = "cargo build --release --locked"

[get-image-name]
env = [
  {name = "IMAGE_DOMAIN", value = "fioncat"}
]

[[get-image-name.steps]]
name = "Get current tag"
run = "git describe --tags --exact-match --abbrev=0"
allow_failure = true
capture_output = "IMAGE_TAG"

[[get-image-name.steps]]
name = "Get commit id"
condition = [
  {env = "IMAGE_TAG", exists = false}
]
run = "echo dev-$(git rev-parse --short HEAD)"
capture_output = "IMAGE_TAG"

[[get-image-name.steps]]
name = "Set image name"
set_env = {name = "IMAGE_NAME", value = "${IMAGE_DOMAIN}/roxide:${IMAGE_TAG}"}

[[get-image-name.steps]]
name = "Show image name"
run = "echo Image is: ${IMAGE_NAME:?}"

[build-image]
include = ["get-image-name"]

[[build-image.steps]]
name = "Build docker image"
docker_build = {image = "${IMAGE_NAME}", file = "Dockerfile"}

[publish-image]
include = ["build-image"]

[[publish-image.steps]]
name = "Push docker image"
docker_push = "${IMAGE_NAME}"

[clean]

[[clean.steps]]
name = "Remove old build"
run = "rm -rf ./target"
